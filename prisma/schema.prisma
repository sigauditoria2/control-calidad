generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Order {
  id                String    @id @default(uuid())
  userId            String
  order             String
  estado            String
  cliente           String
  proyecto          String
  fig               String
  codigoElemento    String
  designacion       String
  codigoAplicable   String
  centroTrabajo     String
  qc                String
  areaInspeccionada String
  fechaPlanificada  String
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  contacts          Contact[]
  tools             Tool[]
  events            Event[]
}

model User {
  id        String   @id @default(uuid())
  userId    String
  name      String
  rol       String
  code      String
  function  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Contact {
  id        String   @id @default(uuid())
  orderId   String?
  name      String
  role      String
  code      String
  function  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  order     Order?   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  userId    String?

  @@index([orderId])
}

model Tool {
  id          String   @id @default(uuid())
  orderId     String?
  name        String
  code        String
  responsible String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  order       Order?   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  userId      String?

  @@index([orderId])
}

model Event {
  id         String   @id @default(uuid())
  orderId    String
  title      String
  start      DateTime
  allDay     Boolean
  timeFormat String
  createdAt  DateTime @default(now())
  updateAt   DateTime @updatedAt
  order      Order    @relation(fields: [orderId], references: [id])
  userId     String?

  @@index([orderId])
}
